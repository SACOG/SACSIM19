SET NOCOUNT ON

--Mix index parameters
DECLARE @WgtEmpTot numeric(23,5) SET @WgtEmpTot = 0.1
DECLARE @WgtStu numeric(23,5) SET @WgtStu = 0.3
DECLARE @WgtEmpRet numeric(23,5) SET @WgtEmpRet = 0.3
DECLARE @WgtEmpSvc numeric(23,5) SET @WgtEmpSvc = 0.3

DECLARE @BetaEmpTot numeric(23,5) SET @BetaEmpTot = 1.211
DECLARE @BetaStu numeric(23,5) SET @BetaStu = 0.457
DECLARE @BetaEmpRet numeric(23,5) SET @BetaEmpRet = 0.371
DECLARE @BetaEmpSvc numeric(23,5) SET @BetaEmpSvc = 0.06 -- USED TO BE 0.126

IF OBJECT_ID('{6}', 'U') IS NOT NULL 
DROP TABLE {6}; --output combined ILUT table name

SELECT
	pm.OBJECTID,
	pm.Join_Count,
	pm.TARGET_FID,
	pm.GISAc,
	pm.TAZ07,
	pm.RAD07_NEW,
	pm.GEOID10NUM,
	pm.GUID2016,
	pm.JURIS,
	pm.PARCELID,
	pm.County,
	pm.ComType_BO,
	pm.TRACT10,
	pm.BG_10,
	pm.plan_area,
	pm.TPA_16,
	pm.TPA_40,
	pm.DU_BO,
	pm.EMP_BO,
	pm.EJ_2018,
	pm.TPA36_16,
	pm.PJOBC_NAME,
	pm.PJOBC_4MI,
	pm.PSJOBC_4MI,
	eto.EMPHBB_SCNYR AS HOMEEMP, --count of home-based jobs on parcel; only has data in base year.
	eto.DU_SCNYR AS DU_TOT, --dwelling units for scenario year; formatter brackets are the 2-digit year suffix. E.g., for 2016, this would be eto.du16
	0 AS ResAcYr, --residential acres, TBD
	0 AS EmpAcYr, --employment acres, TBD
	eto.LU_SCNYR AS LUTYPE,--land use type for scen year
	CASE WHEN pp.POP_TOT IS NULL THEN 0 ELSE pp.POP_TOT END AS POP_TOT,
	CASE WHEN pp.POP_HH IS NULL THEN 0 ELSE pp.POP_HH END AS POP_HH,
	CASE WHEN pp.PPTYP1 IS NULL THEN 0 ELSE pp.PPTYP1 END AS PPTYP1,
	CASE WHEN pp.PPTYP2 IS NULL THEN 0 ELSE pp.PPTYP2 END AS PPTYP2,
	CASE WHEN pp.PPTYP3 IS NULL THEN 0 ELSE pp.PPTYP3 END AS PPTYP3,
	CASE WHEN pp.PPTYP4 IS NULL THEN 0 ELSE pp.PPTYP4 END AS PPTYP4,
	CASE WHEN pp.PPTYP5 IS NULL THEN 0 ELSE pp.PPTYP5 END AS PPTYP5,
	CASE WHEN pp.PPTYP6 IS NULL THEN 0 ELSE pp.PPTYP6 END AS PPTYP6,
	CASE WHEN pp.PPTYP7 IS NULL THEN 0 ELSE pp.PPTYP7 END AS PPTYP7,
	CASE WHEN pp.PPTYP8 IS NULL THEN 0 ELSE pp.PPTYP8 END AS PPTYP8,
	CASE WHEN pp.PPWHT IS NULL THEN 0 ELSE pp.PPWHT END AS PPWHT,
	CASE WHEN pp.PPHIS IS NULL THEN 0 ELSE pp.PPHIS END AS PPHIS,
	CASE WHEN pp.PPBLK IS NULL THEN 0 ELSE pp.PPBLK END AS PPBLK,
	CASE WHEN pp.PPOTH IS NULL THEN 0 ELSE pp.PPOTH END AS PPOTH,
	CASE WHEN pp.WAH IS NULL THEN 0 ELSE pp.WAH END AS WAH,
	CASE WHEN pp.WKRS_JOBLOCN IS NULL THEN 0 ELSE pp.WKRS_JOBLOCN END AS WKRS_JOBLOCN,
	CASE WHEN hh.HH_TOT_P IS NULL THEN 0 ELSE hh.HH_TOT_P END AS HH_TOT_P,
	CASE WHEN hh.HH_hh IS NULL THEN 0 ELSE hh.HH_hh END AS HH_hh,
	CASE WHEN hh.HH_INC_1 IS NULL THEN 0 ELSE hh.HH_INC_1 END AS HH_INC_1,
	CASE WHEN hh.HH_INC_2 IS NULL THEN 0 ELSE hh.HH_INC_2 END AS HH_INC_2,
	CASE WHEN hh.HH_INC_3 IS NULL THEN 0 ELSE hh.HH_INC_3 END AS HH_INC_3,
	CASE WHEN hh.HH_INC_4 IS NULL THEN 0 ELSE hh.HH_INC_4 END AS HH_INC_4,
	CASE WHEN hh.HH_INC_5 IS NULL THEN 0 ELSE hh.HH_INC_5 END AS HH_INC_5,
	CASE WHEN hh.HH_HD_1 IS NULL THEN 0 ELSE hh.HH_HD_1 END AS HH_HD_1,
	CASE WHEN hh.HH_HD_2 IS NULL THEN 0 ELSE hh.HH_HD_2 END AS HH_HD_2,
	CASE WHEN hh.HH_HD_3 IS NULL THEN 0 ELSE hh.HH_HD_3 END AS HH_HD_3,
	CASE WHEN hh.VEHICLE IS NULL THEN 0 ELSE hh.VEHICLE END AS VEHICLE,
	CASE WHEN hh.HH_NOVEH IS NULL THEN 0 ELSE hh.HH_NOVEH END AS HH_NOVEH,
	CASE WHEN hh.VEH_AV IS NULL THEN 0 ELSE hh.VEH_AV END AS VEH_AV,
	CASE WHEN pcl.stugrd_p IS NULL AND pcl.stuhgh_p IS NULL THEN 0
		ELSE pcl.stugrd_p + pcl.stuhgh_p END AS ENR_K12,
	CASE WHEN pcl.stuuni_p IS NULL THEN 0 ELSE pcl.stuuni_p END AS ENR_UNI,
	CASE WHEN pcl.emptot_p IS NULL THEN 0 ELSE pcl.emptot_p END AS EMPTOT,
	CASE WHEN pcl.empedu_p IS NULL THEN 0 ELSE pcl.empedu_p END AS EMPEDU,
	CASE WHEN pcl.empfoo_p IS NULL THEN 0 ELSE pcl.empfoo_p END AS EMPFOOD,
	CASE WHEN pcl.empgov_p IS NULL THEN 0 ELSE pcl.empgov_p END AS EMPGOV,
	CASE WHEN pcl.empofc_p IS NULL THEN 0 ELSE pcl.empofc_p END AS EMPOFC,
	CASE WHEN pcl.empoth_p IS NULL THEN 0 ELSE pcl.empoth_p END AS EMPOTH,
	CASE WHEN pcl.empret_p IS NULL THEN 0 ELSE pcl.empret_p END AS EMPRET,
	CASE WHEN pcl.empsvc_p IS NULL THEN 0 ELSE pcl.empsvc_p END AS EMPSVC,
	CASE WHEN pcl.empmed_p IS NULL THEN 0 ELSE pcl.empmed_p END AS EMPMED,
	CASE WHEN pcl.empind_p IS NULL THEN 0 ELSE pcl.empind_p END AS EMPIND,
	CASE WHEN pcl.parkdy_p IS NULL THEN 0 ELSE pcl.parkdy_p END AS DAYPARKS,
	CASE WHEN pcl.dist_lbus IS NULL THEN -1 ELSE pcl.dist_lbus END AS DIST_BUS,
	CASE WHEN pcl.dist_lrt IS NULL THEN -1 ELSE pcl.dist_lbus END AS DIST_LRT,
	CASE
		WHEN pcl.dist_lbus IS NULL AND pcl.dist_lrt IS NULL THEN -1
		WHEN pcl.dist_lbus < pcl.dist_lrt THEN pcl.dist_lbus 
		ELSE pcl.dist_lrt
		END AS DIST_MIN,
	CASE WHEN pcl.nodes1_2 IS NULL THEN -1 ELSE pcl.nodes1_2 END AS NODES1H,
	CASE WHEN pcl.nodes3_2 IS NULL THEN -1 ELSE pcl.nodes3_2 END AS NODES3H,
	CASE WHEN pcl.nodes4_2 IS NULL THEN -1 ELSE pcl.nodes4_2 END AS NODES4H,
	CASE WHEN pcl.hh_2 > 0 
		THEN
			(@WgtEmpTot * (
				  (CASE WHEN (pcl.hh_2 * @BetaEmpTot) < pcl.emptot_2 THEN pcl.hh_2 * @BetaEmpTot
				  ELSE pcl.emptot_2    
				  END) / (CASE WHEN (pcl.hh_2 * @BetaEmpTot) > pcl.emptot_2 THEN pcl.hh_2 * @BetaEmpTot
				  ELSE pcl.emptot_2
				  END)
				  )
			) + 
			(@WgtStu * (
				   (CASE WHEN (pcl.hh_2 * @BetaStu) < (pcl.stugrd_2 + pcl.stuhgh_2) THEN pcl.hh_2 * @BetaStu
				   ELSE (pcl.stugrd_2 + pcl.stuhgh_2)
				   END) / (CASE WHEN (pcl.hh_2 * @BetaStu) > (pcl.stugrd_2 + pcl.stuhgh_2) THEN pcl.hh_2 * @BetaStu
				   ELSE (pcl.stugrd_2 + pcl.stuhgh_2)
				   END)
				   )
			) + 
			(@WgtEmpRet * (
				   (CASE WHEN (pcl.hh_2 * @BetaEmpRet) < pcl.empret_2 THEN pcl.hh_2 * @BetaEmpRet
				   ELSE pcl.empret_2
				   END) / (CASE WHEN (pcl.hh_2 * @BetaEmpRet) > pcl.empret_2 THEN pcl.hh_2 * @BetaEmpRet
				   ELSE pcl.empret_2
				   END)
				   )
			) + 
			(@WgtEmpSvc * (
				   (CASE WHEN (pcl.hh_2 * @BetaEmpSvc) < pcl.empsvc_2 THEN pcl.hh_2 * @BetaEmpSvc
				   ELSE pcl.empsvc_2
				   END) / (CASE WHEN (pcl.hh_2 * @BetaEmpSvc) > pcl.empsvc_2 THEN pcl.hh_2 * @BetaEmpSvc
				   ELSE pcl.empsvc_2
				   END)
				   )
			)
		ELSE -1 -- -1 means parcel did not have any hhs within its half-mile buffer
		END AS MIXINDEX,
	CASE WHEN pcl.MIX_DENS IS NULL THEN -1 ELSE pcl.MIX_DENS END AS MIX_DENS,
	CASE WHEN pcl.hh_2 IS NULL THEN -1 ELSE pcl.hh_2 END AS HH_BUF2,
	CASE WHEN pcl.emptot_2 IS NULL THEN -1 ELSE pcl.emptot_2 END AS EMP_BUF2,
	CASE WHEN tt.PT_TOT_RES IS NULL THEN 0 ELSE tt.PT_TOT_RES END AS PT_TOT_RES,
	CASE WHEN tt.PTO_TOT_RES IS NULL THEN 0 ELSE tt.PTO_TOT_RES END AS PTO_TOT_RES,
	CASE WHEN tt.VT_TOT_RES IS NULL THEN 0 ELSE tt.VT_TOT_RES END AS VT_TOT_RES,
	CASE WHEN tt.PT_WRK_RES IS NULL THEN 0 ELSE tt.PT_WRK_RES END AS PT_WRK_RES,
	CASE WHEN tt.PTO_WRK_RES IS NULL THEN 0 ELSE tt.PTO_WRK_RES END AS PTO_WRK_RES,
	CASE WHEN tt.VT_WRK_RES IS NULL THEN 0 ELSE tt.VT_WRK_RES END AS VT_WRK_RES,
	CASE WHEN tt.SOV_TOT_RES IS NULL THEN 0 ELSE tt.SOV_TOT_RES END AS SOV_TOT_RES,
	CASE WHEN tt.HOV_TOT_RES IS NULL THEN 0 ELSE tt.HOV_TOT_RES END AS HOV_TOT_RES,
	CASE WHEN tt.TRN_TOT_RES IS NULL THEN 0 ELSE tt.TRN_TOT_RES END AS TRN_TOT_RES,
	CASE WHEN tt.BIK_TOT_RES IS NULL THEN 0 ELSE tt.BIK_TOT_RES END AS BIK_TOT_RES,
	CASE WHEN tt.WLK_TOT_RES IS NULL THEN 0 ELSE tt.WLK_TOT_RES END AS WLK_TOT_RES,
	CASE WHEN tt.SCB_TOT_RES IS NULL THEN 0 ELSE tt.SCB_TOT_RES END AS SCB_TOT_RES,
	CASE WHEN tt.TNC_TOT_RES IS NULL THEN 0 ELSE tt.TNC_TOT_RES END AS TNC_TOT_RES,
	CASE WHEN tt.SOV_WRK_RES IS NULL THEN 0 ELSE tt.SOV_WRK_RES END AS SOV_WRK_RES,
	CASE WHEN tt.HOV_WRK_RES IS NULL THEN 0 ELSE tt.HOV_WRK_RES END AS HOV_WRK_RES,
	CASE WHEN tt.TRN_WRK_RES IS NULL THEN 0 ELSE tt.TRN_WRK_RES END AS TRN_WRK_RES,
	CASE WHEN tt.BIK_WRK_RES IS NULL THEN 0 ELSE tt.BIK_WRK_RES END AS BIK_WRK_RES,
	CASE WHEN tt.WLK_WRK_RES IS NULL THEN 0 ELSE tt.WLK_WRK_RES END AS WLK_WRK_RES,
	CASE WHEN tt.TNC_WRK_RES IS NULL THEN 0 ELSE tt.TNC_WRK_RES END AS TNC_WRK_RES,
	CASE WHEN tt.PTOURSOV IS NULL THEN 0 ELSE tt.PTOURSOV END AS PTOURSOV,
	CASE WHEN tt.PTOURHOV IS NULL THEN 0 ELSE tt.PTOURHOV END AS PTOURHOV,
	CASE WHEN tt.PTOURTRN IS NULL THEN 0 ELSE tt.PTOURTRN END AS PTOURTRN,
	CASE WHEN tt.PTOURBIK IS NULL THEN 0 ELSE tt.PTOURBIK END AS PTOURBIK,
	CASE WHEN tt.PTOURWLK IS NULL THEN 0 ELSE tt.PTOURWLK END AS PTOURWLK,
	CASE WHEN tt.PTOURSCB IS NULL THEN 0 ELSE tt.PTOURSCB END AS PTOURSCB,
	CASE WHEN tt.PTOURTNC IS NULL THEN 0 ELSE tt.PTOURTNC END AS PTOURTNC,
	CASE WHEN tt.WTOURSOV IS NULL THEN 0 ELSE tt.WTOURSOV END AS WTOURSOV,
	CASE WHEN tt.WTOURHOV IS NULL THEN 0 ELSE tt.WTOURHOV END AS WTOURHOV,
	CASE WHEN tt.WTOURTRN IS NULL THEN 0 ELSE tt.WTOURTRN END AS WTOURTRN,
	CASE WHEN tt.WTOURBIK IS NULL THEN 0 ELSE tt.WTOURBIK END AS WTOURBIK,
	CASE WHEN tt.WTOURWLK IS NULL THEN 0 ELSE tt.WTOURWLK END AS WTOURWLK,
	CASE WHEN tt.WTOURTNC IS NULL THEN 0 ELSE tt.WTOURTNC END AS WTOURTNC,
	CASE WHEN tt.II_VMT_RES IS NULL THEN 0 ELSE tt.II_VMT_RES END AS II_VMT_RES,
	CASE WHEN tt.VMT_WRK_RES IS NULL THEN 0 ELSE tt.VMT_WRK_RES END AS VMT_WRK_RES,
	CASE WHEN tt.II_CVMT_RES IS NULL THEN 0 ELSE tt.II_CVMT_RES END AS II_CVMT_RES,
	CASE WHEN tt.CVMT_WRK_RES IS NULL THEN 0 ELSE tt.CVMT_WRK_RES END AS CVMT_WRK_RES,
	CASE WHEN tt.PHR_TOT_RES IS NULL THEN 0 ELSE tt.PHR_TOT_RES END AS PHR_TOT_RES,
	CASE WHEN tt.VHR_TOT_RES IS NULL THEN 0 ELSE tt.VHR_TOT_RES END AS VHR_TOT_RES,
	CASE WHEN tt.PHR_WRK_RES IS NULL THEN 0 ELSE tt.PHR_WRK_RES END AS PHR_WRK_RES,
	CASE WHEN tt.VHR_WRK_RES IS NULL THEN 0 ELSE tt.VHR_WRK_RES END AS VHR_WRK_RES,
	CASE WHEN tt.GMI_TOT_RES IS NULL THEN 0 ELSE tt.GMI_TOT_RES END AS GMI_TOT_RES,
	0 AS GMI_HH_E, --placeholder, not available yet
	0 AS GMI_HH_C, --placeholder, not available yet
	CASE WHEN ixcv.IX_VT_RES IS NULL THEN 0 ELSE ixcv.IX_VT_RES END AS IX_VT_RES,
	CASE WHEN ixcv.IX_VMT_RES IS NULL THEN 0 ELSE ixcv.IX_VMT_RES END AS IX_VMT_RES,
	CASE WHEN ixcv.IX_CVMT_RES IS NULL THEN 0 ELSE ixcv.IX_CVMT_RES END AS IX_CVMT_RES,
	CASE WHEN ixcv.IX_VHT_RES IS NULL THEN 0 ELSE ixcv.IX_VHT_RES END AS IX_VHT_RES,
	CASE WHEN tt.II_VMT_RES IS NULL THEN 0 ELSE tt.II_VMT_RES END
		+ CASE WHEN ixcv.IX_VMT_RES IS NULL THEN 0 ELSE ixcv.IX_VMT_RES END
		AS VMT_TOT_RES,
	CASE WHEN tt.II_CVMT_RES IS NULL THEN 0 ELSE tt.II_CVMT_RES END
		+ CASE WHEN ixcv.IX_CVMT_RES IS NULL THEN 0 ELSE ixcv.IX_CVMT_RES END
		AS CVMT_TOT_RES,
	CASE WHEN ixcv.IX_VT IS NULL THEN 0 ELSE ixcv.IX_VT END AS IX_VT,
	CASE WHEN ixcv.IX_VMT IS NULL THEN 0 ELSE ixcv.IX_VMT END AS IX_VMT,
	CASE WHEN ixcv.IX_CVMT IS NULL THEN 0 ELSE ixcv.IX_CVMT END AS IX_CVMT,
	CASE WHEN ixcv.IX_VHT IS NULL THEN 0 ELSE ixcv.IX_VHT END AS IX_VHT,
	CASE WHEN ixcv.CV2_VT IS NULL THEN 0 ELSE ixcv.CV2_VT END AS CV2_VT,
	CASE WHEN ixcv.CV3_VT IS NULL THEN 0 ELSE ixcv.CV3_VT END AS CV3_VT,
	CASE WHEN ixcv.CV2_VMT IS NULL THEN 0 ELSE ixcv.CV2_VMT END AS CV2_VMT,
	CASE WHEN ixcv.CV3_VMT IS NULL THEN 0 ELSE ixcv.CV3_VMT END AS CV3_VMT,
	CASE WHEN ixcv.CV2_CVMT IS NULL THEN 0 ELSE ixcv.CV2_CVMT END AS CV2_CVMT,
	CASE WHEN ixcv.CV3_CVMT IS NULL THEN 0 ELSE ixcv.CV3_CVMT END AS CV3_CVMT,
	CASE WHEN ixcv.CV2_VHT IS NULL THEN 0 ELSE ixcv.CV2_VHT END AS CV2_VHT,
	CASE WHEN ixcv.CV3_VHT IS NULL THEN 0 ELSE ixcv.CV3_VHT END AS CV3_VHT,
	CASE WHEN tt.JOB_ExWorker IS NULL THEN 0 ELSE tt.JOB_ExWorker END AS JOB_ExWorker,
	CASE WHEN tt.VMT_wrk_tourend IS NULL THEN 0 ELSE tt.VMT_wrk_tourend END AS VMT_wrk_tourend,
	CASE WHEN tt.CVMT_wrk_tourend IS NULL THEN 0 ELSE tt.CVMT_wrk_tourend END AS CVMT_wrk_tourend,
	CASE WHEN tt.VT_wrk_tourend IS NULL THEN 0 ELSE tt.VT_wrk_tourend END AS VT_wrk_tourend,
	CASE WHEN tt.PT_wrk_tourend IS NULL THEN 0 ELSE tt.PT_wrk_tourend END AS PT_wrk_tourend,
	CASE WHEN tt.SOV_wrk_tourend IS NULL THEN 0 ELSE tt.SOV_wrk_tourend END AS SOV_wrk_tourend,
	CASE WHEN tt.HOV_wrk_tourend IS NULL THEN 0 ELSE tt.HOV_wrk_tourend END AS HOV_wrk_tourend,
	CASE WHEN tt.TRN_wrk_tourend IS NULL THEN 0 ELSE tt.TRN_wrk_tourend END AS TRN_wrk_tourend,
	CASE WHEN tt.BIK_wrk_tourend IS NULL THEN 0 ELSE tt.BIK_wrk_tourend END AS BIK_wrk_tourend,
	CASE WHEN tt.WLK_wrk_tourend IS NULL THEN 0 ELSE tt.WLK_wrk_tourend END AS WLK_wrk_tourend,
	CASE WHEN tt.TNC_wrk_tourend IS NULL THEN 0 ELSE tt.TNC_wrk_tourend END AS TNC_wrk_tourend,
	CASE WHEN tt.TRN_LBUS_RES IS NULL THEN 0 ELSE tt.TRN_LBUS_RES END AS TRN_LBUS_RES,
	CASE WHEN tt.TRN_LRT_RES IS NULL THEN 0 ELSE tt.TRN_LRT_RES END AS TRN_LRT_RES,
	CASE WHEN tt.TRN_EBUS_RES IS NULL THEN 0 ELSE tt.TRN_EBUS_RES END AS TRN_EBUS_RES
INTO {6} --combined ilut output table name
FROM {0} pm --master raw parcel table
	LEFT JOIN {1} pcl --raw parcel scenario table
		ON pm.PARCELID = pcl.parcelid
	LEFT JOIN {7} eto --regional envision tomorrow parcel table
		ON pm.PARCELID = eto.PARCELID
	LEFT JOIN {2} hh --ilut hh table
		ON pm.PARCELID = hh.parcelid
	LEFT JOIN {3} pp --ilut person table
		ON pm.PARCELID = pp.parcelid
	LEFT JOIN {4} tt --ilut triptour table
		ON pm.PARCELID = tt.parcelid
	LEFT JOIN {5} ixcv --ilut ixxicveh table
		ON pm.PARCELID = ixcv.parcelid

IF OBJECT_ID('{2}', 'U') IS NOT NULL DROP TABLE {2}; --delete temp ilut hh table
IF OBJECT_ID('{3}', 'U') IS NOT NULL DROP TABLE {3}; --delete temp ilut person table
IF OBJECT_ID('{4}', 'U') IS NOT NULL DROP TABLE {4}; --delete temp ilut triptour table
IF OBJECT_ID('{5}', 'U') IS NOT NULL DROP TABLE {5}; --delete temp ilut ixxicveh table
